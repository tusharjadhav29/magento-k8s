apiVersion: v1
kind: Service
metadata:
  labels:
    app: magento
  name: magento
spec:
  type: LoadBalancer
  #type: NodePort
  ports:
    - name: port-1
      nodePort: 32108
      port: 80
      targetPort: 80
    - name: port-2
      nodePort: 32751
      port: 443
      targetPort: 443
  selector:
    app: magento
    tier: frontend

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv01
  labels:
    app: magento
spec:
  storageClassName: m2-web
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  hostPath:
    path: "/data/m2-data-volume"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: myclaim
  labels:
    app: magento
spec:
  storageClassName: m2-web
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: magento
  labels:
    app: magento
spec:
  replicas: 2
  selector:
    matchLabels:
      app: magento
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: magento
        tier: frontend
    spec:
      containers:
              #        - image: docker.io/rahuldock16/magento-2
        - image: docker.io/tusharja2986/m2-k8s-app:v1
          name: magento
          ports:
            - containerPort: 80
            - containerPort: 443
              name: magento
          volumeMounts:
            - name: m2-persistent-storage
              mountPath: /var/www/html
              # - name: certs-volume 
              # mountPath: /certs
              # - name: compose-volume
              # mountPath: /root/composer
              # - name: config-volume
              #mountPath: /etc/nginx/sites-available/
              #   - name: config-volume
              #mountPath: /etc/nginx/sites-enabled/

          command: ["/bin/sh", "-c"]
          args:
           - while true; do
              sh -x /var/www/html/super.sh;
              sleep 1;
              done
      volumes:
        - name: m2-persistent-storage
          persistentVolumeClaim:
            claimName: myclaim
            #- name: certs-volume
            #secret:
            #secretName: nginx-certs
            #- name: config-volume
            #configMap:
            #name: nginx-config
            #- name: compose-volume
            #configMap:
            #name: compose-config




